///
/// HybridNitroGeolocationSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroGeolocationSpec``
public protocol HybridNitroGeolocationSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func setRNConfiguration(config: RNConfiguration) throws -> Void
}

/// See ``HybridNitroGeolocationSpec``
open class HybridNitroGeolocationSpec_base {
  private weak var cxxWrapper: HybridNitroGeolocationSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridNitroGeolocationSpec_cxx {
  #if DEBUG
    guard self is HybridNitroGeolocationSpec else {
      fatalError("`self` is not a `HybridNitroGeolocationSpec`! Did you accidentally inherit from `HybridNitroGeolocationSpec_base` instead of `HybridNitroGeolocationSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroGeolocationSpec_cxx(self as! HybridNitroGeolocationSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroGeolocation HybridObject.
 * Implement this protocol to create Swift-based instances of NitroGeolocation.
 * ```swift
 * class HybridNitroGeolocation : HybridNitroGeolocationSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroGeolocationSpec = HybridNitroGeolocationSpec_protocol & HybridNitroGeolocationSpec_base
