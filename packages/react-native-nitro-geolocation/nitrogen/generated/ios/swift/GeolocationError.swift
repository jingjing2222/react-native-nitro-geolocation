///
/// GeolocationError.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `GeolocationError`, backed by a C++ struct.
 */
public typealias GeolocationError = margelo.nitro.nitrogeolocation.GeolocationError

public extension GeolocationError {
  private typealias bridge = margelo.nitro.nitrogeolocation.bridge.swift

  /**
   * Create a new instance of `GeolocationError`.
   */
  init(code: Double, message: String, PERMISSION_DENIED: Double, POSITION_UNAVAILABLE: Double, TIMEOUT: Double) {
    self.init(code, std.string(message), PERMISSION_DENIED, POSITION_UNAVAILABLE, TIMEOUT)
  }

  var code: Double {
    @inline(__always)
    get {
      return self.__code
    }
    @inline(__always)
    set {
      self.__code = newValue
    }
  }
  
  var message: String {
    @inline(__always)
    get {
      return String(self.__message)
    }
    @inline(__always)
    set {
      self.__message = std.string(newValue)
    }
  }
  
  var PERMISSION_DENIED: Double {
    @inline(__always)
    get {
      return self.__PERMISSION_DENIED
    }
    @inline(__always)
    set {
      self.__PERMISSION_DENIED = newValue
    }
  }
  
  var POSITION_UNAVAILABLE: Double {
    @inline(__always)
    get {
      return self.__POSITION_UNAVAILABLE
    }
    @inline(__always)
    set {
      self.__POSITION_UNAVAILABLE = newValue
    }
  }
  
  var TIMEOUT: Double {
    @inline(__always)
    get {
      return self.__TIMEOUT
    }
    @inline(__always)
    set {
      self.__TIMEOUT = newValue
    }
  }
}
