///
/// JGeolocationResponse.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "GeolocationResponse.hpp"

#include "GeolocationCoordinates.hpp"
#include "JGeolocationCoordinates.hpp"
#include <optional>

namespace margelo::nitro::nitrogeolocation {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "GeolocationResponse" and the the Kotlin data class "GeolocationResponse".
   */
  struct JGeolocationResponse final: public jni::JavaClass<JGeolocationResponse> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrogeolocation/GeolocationResponse;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct GeolocationResponse by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    GeolocationResponse toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldCoords = clazz->getField<JGeolocationCoordinates>("coords");
      jni::local_ref<JGeolocationCoordinates> coords = this->getFieldValue(fieldCoords);
      static const auto fieldTimestamp = clazz->getField<double>("timestamp");
      double timestamp = this->getFieldValue(fieldTimestamp);
      return GeolocationResponse(
        coords->toCpp(),
        timestamp
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JGeolocationResponse::javaobject> fromCpp(const GeolocationResponse& value) {
      return newInstance(
        JGeolocationCoordinates::fromCpp(value.coords),
        value.timestamp
      );
    }
  };

} // namespace margelo::nitro::nitrogeolocation
