///
/// JGeolocationOptions.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "GeolocationOptions.hpp"

#include <optional>

namespace margelo::nitro::nitrogeolocation {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "GeolocationOptions" and the the Kotlin data class "GeolocationOptions".
   */
  struct JGeolocationOptions final: public jni::JavaClass<JGeolocationOptions> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrogeolocation/GeolocationOptions;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct GeolocationOptions by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    GeolocationOptions toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldTimeout = clazz->getField<jni::JDouble>("timeout");
      jni::local_ref<jni::JDouble> timeout = this->getFieldValue(fieldTimeout);
      static const auto fieldMaximumAge = clazz->getField<jni::JDouble>("maximumAge");
      jni::local_ref<jni::JDouble> maximumAge = this->getFieldValue(fieldMaximumAge);
      static const auto fieldEnableHighAccuracy = clazz->getField<jni::JBoolean>("enableHighAccuracy");
      jni::local_ref<jni::JBoolean> enableHighAccuracy = this->getFieldValue(fieldEnableHighAccuracy);
      return GeolocationOptions(
        timeout != nullptr ? std::make_optional(timeout->value()) : std::nullopt,
        maximumAge != nullptr ? std::make_optional(maximumAge->value()) : std::nullopt,
        enableHighAccuracy != nullptr ? std::make_optional(static_cast<bool>(enableHighAccuracy->value())) : std::nullopt
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JGeolocationOptions::javaobject> fromCpp(const GeolocationOptions& value) {
      return newInstance(
        value.timeout.has_value() ? jni::JDouble::valueOf(value.timeout.value()) : nullptr,
        value.maximumAge.has_value() ? jni::JDouble::valueOf(value.maximumAge.value()) : nullptr,
        value.enableHighAccuracy.has_value() ? jni::JBoolean::valueOf(value.enableHighAccuracy.value()) : nullptr
      );
    }
  };

} // namespace margelo::nitro::nitrogeolocation
