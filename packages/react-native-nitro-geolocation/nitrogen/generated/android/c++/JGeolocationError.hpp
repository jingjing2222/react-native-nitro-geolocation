///
/// JGeolocationError.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "GeolocationError.hpp"

#include <string>

namespace margelo::nitro::nitrogeolocation {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "GeolocationError" and the the Kotlin data class "GeolocationError".
   */
  struct JGeolocationError final: public jni::JavaClass<JGeolocationError> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrogeolocation/GeolocationError;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct GeolocationError by copying all values to C++.
     */
    [[maybe_unused]]
    [[nodiscard]]
    GeolocationError toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldCode = clazz->getField<double>("code");
      double code = this->getFieldValue(fieldCode);
      static const auto fieldMessage = clazz->getField<jni::JString>("message");
      jni::local_ref<jni::JString> message = this->getFieldValue(fieldMessage);
      static const auto fieldPERMISSION_DENIED = clazz->getField<double>("PERMISSION_DENIED");
      double PERMISSION_DENIED = this->getFieldValue(fieldPERMISSION_DENIED);
      static const auto fieldPOSITION_UNAVAILABLE = clazz->getField<double>("POSITION_UNAVAILABLE");
      double POSITION_UNAVAILABLE = this->getFieldValue(fieldPOSITION_UNAVAILABLE);
      static const auto fieldTIMEOUT = clazz->getField<double>("TIMEOUT");
      double TIMEOUT = this->getFieldValue(fieldTIMEOUT);
      return GeolocationError(
        code,
        message->toStdString(),
        PERMISSION_DENIED,
        POSITION_UNAVAILABLE,
        TIMEOUT
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JGeolocationError::javaobject> fromCpp(const GeolocationError& value) {
      return newInstance(
        value.code,
        jni::make_jstring(value.message),
        value.PERMISSION_DENIED,
        value.POSITION_UNAVAILABLE,
        value.TIMEOUT
      );
    }
  };

} // namespace margelo::nitro::nitrogeolocation
